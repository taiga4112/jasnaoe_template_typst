#import "libs/jasnaoe-conf/jasnaoe-conf_lib.typ": jasnaoe-conf
#show: jasnaoe-conf.with(
  bibliography: bibliography("references.yml", full: false)
)

= 緒　　言
このテンプレートは，2024年秋季以降の日本船舶海洋工学会の講演会論文作成を想定して，#link("https://typst.app")[Typst]で作成しています．
もちろん♡非公式♡のテンプレートですので，ご使用の際は自己責任でお願いします．


= 執筆のための環境設定

手元のPCでTypst環境を構築する必要があります．基本的には，#link("https://typst.app")[Typst]のマニュアルを参考に構築してください．
不安な方は，README.md に記載されている手順に従ってください．


= 執筆方法

== 基本的な執筆の流れ

原稿執筆の際には，このテンプレートファイルに直接打ち込んでいって下さい．
読点は「，」句点は「．」を使って下さい．
章は `=`，節は `==`，小節は `===` で始めます．
改段落は LaTeX と同じく改行を 2 つ以上挟みます．
数字つき箇条書きは `+` で，数字なしの箇条書きは `-` を文頭につけて書くことができます．
例えば，
- 1番目
- 2番目
のような感じです．

文字組等の投稿規定を満たすように作られていますので，フォントの種類の設定や行送り，文字サイズの設定を省略することができます．
ちなみに，本文の文字サイズは9pt，行間隔は1.00emと設定してします．
その他，文法は#link("https://typst.app/docs")[Typst Documentation]をご参照ください．

== 図

図の入れ方は#link("https://typst.app")[Typst]のドキュメントや，このテンプレートファイルを参考にしてください．
図のタイトルは @fig:fig_example のように図の下部につけてください．
図の表題（caption）は英語で書きます．
また，表題の最後にはピリオドを付けて下さい．
また，図は原則として英語表記としてください．
日本語もしくはその他の言語の表記が必要な場合は，英語との併記としてください．
文字・記号等は十分に判読できる大きさとしてください．
ここで placement 属性は，自動 (auto) だけでなく，紙面の上 (top) に寄せるか下 (bottom) に寄せるかを決められます．言及している文章に近い方に調整してください．

#figure(
  placement: auto,
  image("figs/example.svg", width: 100%),
  caption: [Example of a figure.],
) <fig:fig_example>


== 表

表の入れ方は#link("https://typst.app")[Typst]のドキュメントや，このテンプレートファイルを参考にしてください．
表は，@tab:table_example のように表形式で記述します．
表題（caption）は表の上に書きます．
表の表題（caption）は英語で書きます．
また，表題の最後にはピリオドを付けて下さい．
また，表も原則として英語表記としてください．
ここで placement 属性は，自動 (auto) だけでなく，紙面の上 (top) に寄せるか下 (bottom) に寄せるかを決められます．
必要に応じて，言及している文章に近い方に調整してください．

#figure(
  placement: auto,
  caption: [Example of a table.],
  table(
    columns: 4,
    stroke: (x: none),
    table.header(
      [*Margins*],
      [...],
      [*Left Column*],
      [*Right Column*],
    ),
    row-gutter: (2.2pt, auto),
    [Top], [...], [27 mm], [27 mm],
    [Left], [...], [16 mm], [107.5 mm],
    [Right], [...], [100 mm], [191.5 mm],
    [Bottom], [...], [275 mm], [275 mm],
  )
) <tab:table_example>


== 数式

数式番号をつけるような中央揃えの数式は，最初の`$` と閉じの`$`の中に記載してください．
数式の書き方はTypstのドキュメントを参照してください．
例えば，@eq:mmg_example のように記述してください．

$
m(dot(u)-v r) &=-m_x dot(u)+m_y v r+X_H+X_P+X_R \
m(dot(v)+u r) &=-m_y dot(v)+m_x u r+Y_H+Y_R \
I_(z G) dot(r) &=-J_Z dot(r)+N_H+N_R
$ <eq:mmg_example>

また，文中に書く数式は，例えば，$n_i = sum_(i=1)^(N)(f(r_(i j)))$のように記述してください．


== 特殊な章
謝辞と参考文献は他の章とは異なり，章番号が自動でつかないように設定しています．


== 参考文献
参考文献は `references.yml` に記載してください．
#link("https://github.com/typst/hayagriva")[Hayagriva] という YAML 形式のフォーマットに従っています．
編集するだけであれば特に解説する必要はないと思います．
参考文献の体裁は `libs/rsj-conf/bib.csl` で制御しています．
これは Citation Style Language という XML 形式で記述されております．
CSL ファイルは著者が編集する必要はありませんが，詳細が気になる方は https://citationstyles.org/ をご参照ください．
日本語論文として重要な点は，CSL ファイルでは Hayagriva で記述された `language` の属性を見て，著者表示を"カンマ区切りのみ"にするか"カンマ区切り+最終著者の前にand" にするかを決定している点です
よって，英語文献だけでしたら YAML ファイルの代わりに bib ファイルも使用することができます．

文献内で引用された順番にフォーマットを整えて自動で参考文献の章が作られます．
引用の方法については後述します．
完成原稿では推奨されませんが，引用されていない論文も記載したい場合には full: true にすれば，すべての文献が出力されます．

== 引用
参考文献であれば #super[@mitsuyukiDesignProductionStrategy2014] のように表示されます．
参考文献は連続して引用すると @kimura2017state @kimura2021control @kimura2020facility @khalil2002control @sugie1999feedback @shimz2022visually と繋げられて表示されます
文法上では特に規則はありませんが，個人的にはラベルの命名規則として，図の場合には "fig:" から，表の場合には"tab:" から始めるようにラベル名を設定しており，参考文献のラベルは "著者名発行年タイトルの最初の単語"で名付けております．

= おわりに

論文の最後には結論を書きます．箇条書きスタイルを使うなどして，分かり易く，コンパクトに書いて下さい．結論を先に読むという読者も居ますので，分かり易く，何が研究されて，新しく何が分かったのかなどを書きます．


= 謝　　辞

謝辞が必要なときは，結論の次に書きます．章番号は付けませんが，「謝辞」の表題はセンタリングをして下さい．

また，謝辞の次は参考文献を記載しますが，このテンプレートではreferences.ymlから自動的に記載するようにしているので，特に書くことはありません．ただし，参考文献は英語表記としてください．英語等(フランス語、ドイツ語その他アルファベットで表される言語)以外の文献の場合，文献に英語等のタイトルがある場合はそれを記載し，無い場合は英訳と原語の併記としてください．